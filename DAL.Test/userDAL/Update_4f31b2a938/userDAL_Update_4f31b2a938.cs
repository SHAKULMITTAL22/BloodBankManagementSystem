// Test generated by RoostGPT for test roost-test using AI Type Azure Open AI and AI Model roost-gpt4-32k

using NUnit.Framework;
using BloodBankManagementSystem.DAL;
using System.Data.SqlClient;
using System;


namespace BloodBankManagementSystem.DAL.Test
{
    [TestFixture]
    public class userDAL_Update_4f31b2a938 
    {
        private userDAL userDAL;
        private userBLL userBLL;
        private SqlConnection conn;
        private SqlCommand cmd;

        [SetUp]
        public void Setup()
        {
            // initializing here 

            userDAL = new userDAL();
            userBLL = new userBLL();
            
            //Mocking the sql connection and sql command
            conn = new SqlConnection("Server=.;Database=dummyDataBase;User Id=sa;Password =P@ssw0rd;");
            cmd = new SqlCommand();

            //Assigning the sql command to our command object and passing a dummy connection string to our connection object
            userDAL.conn = conn;
            userDAL.cmd = cmd;
        }

        [Test]
        public void UpdateUser_SuccessfulUpdate_ReturnsTrue()
        {
            userBLL.username = "username";
            userBLL.email = "email@email.com";
            userBLL.password = "password";
            userBLL.full_name = "Name";
            userBLL.contact = "12345";
            userBLL.address = "Address";
            userBLL.added_date = DateTime.Now;
            userBLL.image_name = "image";
            userBLL.user_id = 1;

            var result = userDAL.Update(userBLL);

            Assert.AreEqual(result, true);
        }

        [Test]
        public void UpdateUser_FailedUpdate_ReturnsFalse()
        {
            userBLL.username = null; // giving null username 
            userBLL.email = "email@email.com";
            userBLL.password = "password";
            userBLL.full_name = "Name";
            userBLL.contact = "12345";
            userBLL.address = "Address";
            userBLL.added_date = DateTime.Now;
            userBLL.image_name = "image";
            userBLL.user_id = 1;

            var result = userDAL.Update(userBLL);

            Assert.AreEqual(result, false);
        }

        [TearDown]
        public void TearDown() 
        {
            cmd.Parameters.Clear(); // clearing sql commands to not interfere with other tests
            conn.Close(); // closing sql connections
        }
    }
}
